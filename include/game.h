#ifndef GAME_H
#define GAME_H

#include <stdint.h>
#include <stdbool.h>

// up, down, left and right are self-explanatory, actions contains four
//  different inputs that are game specific, e.g. jump or fire.
typedef struct input_s {
	float up, down, left, right;
	float actions[4];
} input_t;

#define SENSOR_SCREEN "screen"
// A structure generated by the game implementation, it is used to hold
//  sensory data such as screen data, audio et c.  The name indicates what
//  it is supposed to be, and can be defined by the game itself.  Currenly
//  only "screen" is predefined and supports a depth of either 1 or 3
//  depending on if the game uses gray scale or RGB colour.
typedef struct sensor_s {
	const char *name;
	const uint32_t height;
	const uint32_t width;
	const uint32_t depth;
	const float *data;
} sensor_t;

// A structure generated by the game implementation, the player can't change
//  any of the values, they're only for information purposes.
struct game_s;
typedef struct game_s {
	const uint32_t num_sensors;
	const sensor_t *sensors;
	const int32_t score;
	const bool game_over;

	// Sends a new input to the game and requests a new state to be written
	//  into <game>.
	void(*_update)(struct game_s* game, input_t input);
} game_t;

#endif // GAME_H
